buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
    dependencies {
        if (rootProject.ext.has("gradle_classpath")) {
            classpath rootProject.ext.gradle_classpath
        } else {
            logger.warn('classpath not found in rootProject')
            classpath 'com.android.tools.build:gradle:3.0.1'
        }
    }
}

apply plugin: 'com.android.application'

android {
    if (rootProject.ext.has("compileSdkVersion")) {
        compileSdkVersion rootProject.ext.compileSdkVersion
        buildToolsVersion rootProject.ext.buildToolsVersion
    } else {
        logger.warn('compileSdkVersion not found in rootProject')
        compileSdkVersion = 27
        buildToolsVersion = "27.0.1"
    }
    defaultConfig {
        applicationId "de.j4velin.pedometer"
    }
    signingConfigs {
        release
    }
    flavorDimensions "main"
    productFlavors {
        play {
            dimension "main"
        }
        fdroid {
            dimension "main"
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
        debug {
            debuggable true
            signingConfig signingConfigs.release
            zipAlignEnabled true
            minifyEnabled false
        }
    }
    compileSdkVersion 25
}

repositories {
    jcenter()
    maven {
        url "https://maven.google.com"
    }
}

dependencies {
    compile 'com.github.j4velin.colorpicker:colorpicker:1.2.3'
    compile 'com.github.j4velin.EazeGraph:EazeGraph:1.0.3'
    compile 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
    playCompile 'com.google.android.gms:play-services-fitness:11.0.4'
    playCompile 'com.google.android.gms:play-services-games:11.0.4'
    playCompile 'com.google.android.gms:play-services-identity:11.0.4'
}

def props = new Properties()

if (project.file("key.properties").exists()) {
    props.load(new FileInputStream(project.file("key.properties")))
} else {
    logger.warn('Using sample keystore!!')
    props.load(new FileInputStream(project.file("key.properties.sample")))
}

android.signingConfigs.release.storeFile rootProject.file(props.keyStore)

android.signingConfigs.release.storePassword props.keyStorePassword

android.signingConfigs.release.keyAlias props.keyAlias

android.signingConfigs.release.keyPassword props.keyAliasPassword
